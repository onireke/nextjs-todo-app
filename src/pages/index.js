import Head from "next/head";
import Image from "next/image";
import { HiPlus } from "react-icons/hi";

import { Inter } from "@next/font/google";
import Todo from "@/components/Todo";
import { useState, useEffect } from "react";
import { db } from "../firebase";
import {
  query,
  collection,
  onSnapshot,
  updateDoc,
  doc,
  addDoc,
  deleteDoc,
} from "firebase/firestore";
import { async } from "@firebase/util";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const [todos, setTodos] = useState([]);
  const [input, setInput] = useState("");

  //Create todo
  const createTodo = async (e) => {
    e.preventDefault(e);
    if (input === "") {
      alert("please enter a valid todo");
      return;
    }
    await addDoc(collection(db, "todos"), {
      text: input,
      completed: false,
    });
    setInput("");
  };

  //Read todo from firebase

  useEffect(() => {
    const q = query(collection(db, "todos"));
    const unsubscribe = onSnapshot(q, (querySnapshot) => {
      let todoArr = [];
      querySnapshot.forEach((doc) => {
        todoArr.push({ ...doc.data(), id: doc.id });
      });
      setTodos(todoArr);
    });
    return () => unsubscribe();
  }, []);

  //Update todo in firebase

  const toggleComplete = async (todo) => {
    await updateDoc(doc(db, "todos", "todo.id"), {
      completed: !todo.completed,
    });
  };
  //Delete todo
  const deleteTodo = async (id) => {
    await deleteDoc(doc(db, "todos", id));
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="main">
        <div className="container">
          <h3 className="heading">Todo App</h3>
          {/* <Form /> */}
          <form onSubmit={createTodo} className="form-main">
            <input
              className="form-input"
              type="text"
              placeholder="Add Todo"
              value={input}
              onChange={(e) => setInput(e.target.value)}
            />
            <button className="form-button">
              <HiPlus size={30} />
            </button>
          </form>

          <ul>
            {todos.map((todo, index) => (
              <Todo
                key={index}
                todo={todo}
                toggleComplete={toggleComplete}
                deleteTodo={deleteTodo}
              />
            ))}
          </ul>
          {todos.length < 1 ? null : (
            <p className="todo-count">`You have {todos.length} todo now`</p>
          )}
        </div>
      </main>
    </>
  );
}
